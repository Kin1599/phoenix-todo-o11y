
services:
  db:
    image: cockroachdb/cockroach:latest-v23.2
    command: start-single-node --insecure
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach-data:/cockroach/cockroach-data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  app:
    build:
      context: ./apps/todo_task_manager
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "4000:4000"
    env_file:
      - .env
    restart: unless-stopped
  
  load-generator:
    build:
      context: ./apps/load-generator
    depends_on:
      - app
    ports:
      - "8081:8081"
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infra/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./infra/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    depends_on:
      - app
      - db
      - load-generator
      - alertmanager
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./infra/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./infra/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      - ./infra/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
  o11y-platform:
    build:
      context: ./apps/o11y-platform
    ports:
      - "80:80"
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  cockroach-data:
  portainer_data: